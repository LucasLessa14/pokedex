{"remainingRequest":"/home/lessa/Documentos/VUE/pokedex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lessa/Documentos/VUE/pokedex/src/components/Pokemon.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lessa/Documentos/VUE/pokedex/src/components/Pokemon.vue","mtime":1594675060733},{"path":"/home/lessa/Documentos/VUE/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lessa/Documentos/VUE/pokedex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lessa/Documentos/VUE/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lessa/Documentos/VUE/pokedex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkgewogICAgICAgIGF4aW9zLmdldCh0aGlzLnVybCkudGhlbihyZXMgPT4gewogICAgICAgICAgICByZXMuZGF0YS50eXBlcy5mb3JFYWNoKGVsZW1lbnQgPT4gdGhpcy5wb2tlbW9uLnR5cGVzLnB1c2goZWxlbWVudC50eXBlLm5hbWUpKTsKICAgICAgICAgICAgdGhpcy5wb2tlbW9uLmZyb250RGVmYXVsdCA9IHJlcy5kYXRhLnNwcml0ZXMuZnJvbnRfZGVmYXVsdDsKICAgICAgICAgICAgdGhpcy5wb2tlbW9uLmJhY2tEZWZhdWx0ID0gcmVzLmRhdGEuc3ByaXRlcy5iYWNrX2RlZmF1bHQ7CiAgICAgICAgICAgIHRoaXMucG9rZW1vbi5mcm9udFNoaW55ID0gcmVzLmRhdGEuc3ByaXRlcy5mcm9udF9zaGlueTsKICAgICAgICAgICAgdGhpcy5wb2tlbW9uLmJhY2tTaGlueSA9IHJlcy5kYXRhLnNwcml0ZXMuYmFja19zaGlueTsKICAgICAgICAgICAgdGhpcy5jdXJyZW50SW1nRnJvbnQgPSB0aGlzLnBva2Vtb24uZnJvbnREZWZhdWx0OwogICAgICAgICAgICB0aGlzLmN1cnJlbnRJbWdCYWNrID0gdGhpcy5wb2tlbW9uLmJhY2tEZWZhdWx0OwogICAgICAgIH0pCiAgICB9LAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlzU2hpbnk6IGZhbHNlLAogICAgICAgICAgICBjdXJyZW50SW1nRnJvbnQ6ICcnLAogICAgICAgICAgICBjdXJyZW50SW1nQmFjazogJycsCiAgICAgICAgICAgIHRleHRCdXR0b246ICdNb2RvIE5vcm1hbCcsCiAgICAgICAgICAgIHBva2Vtb246IHsKICAgICAgICAgICAgICAgIHR5cGVzOiBbXSwKICAgICAgICAgICAgICAgIGZyb250OiAnJywKICAgICAgICAgICAgICAgIGJhY2s6ICcnCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgICBuYW1lOiBTdHJpbmcsCiAgICAgICAgdXJsOiBTdHJpbmcKICAgIH0sCiAgICBmaWx0ZXJzOiB7CiAgICAgICAgdXBwZXI6IGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgICAgICAgIHZhciBuZXdOYW1lID0gdmFsdWVbMF0udG9VcHBlckNhc2UoKSArIHZhbHVlLnNsaWNlKDEpOwogICAgICAgICAgICByZXR1cm4gbmV3TmFtZTsKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIG11ZGFyU3ByaXRlOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgaWYodGhpcy5pc1NoaW55KSB7CiAgICAgICAgICAgICAgICB0aGlzLmlzU2hpbnkgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEltZ0Zyb250ID0gdGhpcy5wb2tlbW9uLmZyb250RGVmYXVsdDsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEltZ0JhY2sgPSB0aGlzLnBva2Vtb24uYmFja0RlZmF1bHQ7CiAgICAgICAgICAgICAgICB0aGlzLnRleHRCdXR0b24gPSAiTW9kbyBOb3JtYWwiOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5pc1NoaW55ID0gdHJ1ZTsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEltZ0Zyb250ID0gdGhpcy5wb2tlbW9uLmZyb250U2hpbnk7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRJbWdCYWNrID0gdGhpcy5wb2tlbW9uLmJhY2tTaGlueTsKICAgICAgICAgICAgICAgIHRoaXMudGV4dEJ1dHRvbiA9ICJNb2RvIEJyaWxoYW50ZSI7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Pokemon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pokemon.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"pokemon\">\n    <div class=\"card\">\n    <div class=\"card-image\">\n        <figure>\n            <img :src=\"currentImgBack\" alt=\"Placeholder image\">\n            <img :src=\"currentImgFront\" alt=\"Placeholder image\">\n        </figure>\n    </div>\n    <div class=\"card-content\">\n        <div class=\"media\">\n        <div class=\"media-content\">\n            <p class=\"title is-4\">{{name | upper}}</p>\n\n            <div v-for=\"type in pokemon.types\" :key=\"type\" class=\"type\">\n                <span :class=\"{'tag is-success': type === 'grass',\n                                'tag is-warning': type === 'electric',\n                                'tag is-danger': type === 'fire',\n                                'tag is-link': type === 'water',\n                                'tag is-poison': type === 'poison',\n                                'tag is-ground': type === 'ground',\n                                'tag is-primary': type === 'psychic',\n                                'tag is-normal': type === 'normal',\n                                'tag is-fighting': type === 'fighting',\n                                'tag is-rock': type === 'rock',\n                                'tag is-ghost': type === 'ghost',\n                                'tag is-info': type === 'ice',\n                                'tag is-flying': type === 'flying',\n                                'tag is-light': type === 'steel',\n                                'tag is-fairy': type === 'fairy',\n                                'tag is-bug': type === 'bug',\n                                'tag is-dragon': type === 'dragon'}\">{{type}}</span>\n            </div>\n        </div>\n        </div>\n\n        <div class=\"content\">\n            <button class=\"button is-fullwidth is-danger\" @click=\"mudarSprite\">{{textButton}}</button>\n        </div>\n    </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    created: function() {\n        axios.get(this.url).then(res => {\n            res.data.types.forEach(element => this.pokemon.types.push(element.type.name));\n            this.pokemon.frontDefault = res.data.sprites.front_default;\n            this.pokemon.backDefault = res.data.sprites.back_default;\n            this.pokemon.frontShiny = res.data.sprites.front_shiny;\n            this.pokemon.backShiny = res.data.sprites.back_shiny;\n            this.currentImgFront = this.pokemon.frontDefault;\n            this.currentImgBack = this.pokemon.backDefault;\n        })\n    },\n    data(){\n        return {\n            isShiny: false,\n            currentImgFront: '',\n            currentImgBack: '',\n            textButton: 'Modo Normal',\n            pokemon: {\n                types: [],\n                front: '',\n                back: ''\n            }\n        }\n    },\n    props: {\n        name: String,\n        url: String\n    },\n    filters: {\n        upper: function(value) {\n            var newName = value[0].toUpperCase() + value.slice(1);\n            return newName;\n        }\n    },\n    methods: {\n        mudarSprite: function() {\n            if(this.isShiny) {\n                this.isShiny = false;\n                this.currentImgFront = this.pokemon.frontDefault;\n                this.currentImgBack = this.pokemon.backDefault;\n                this.textButton = \"Modo Normal\";\n            } else {\n                this.isShiny = true;\n                this.currentImgFront = this.pokemon.frontShiny;\n                this.currentImgBack = this.pokemon.backShiny;\n                this.textButton = \"Modo Brilhante\";\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    #pokemon {\n        margin-top: 2%;\n    }\n\n    span {\n        margin: 0 5px;\n    }\n\n    .tag {\n        font-weight: bold;\n    }\n\n    .tag:not(body).is-poison {\n        background-color: purple;\n        color: white;\n    }\n\n    .tag:not(body).is-ground {\n        background-color: #885744;\n        color: white;\n    }\n\n    .tag:not(body).is-normal {\n        background-color: brown;\n        color: white;\n    }\n\n    .tag:not(body).is-rock {\n        background-color: gray;\n        color: white;\n    }\n\n    .tag:not(body).is-ghost {\n        background-color: #993399;\n        color: white;\n    }\n\n    .tag:not(body).is-fairy {\n        background-color: hotpink;\n        color: white;\n    }\n\n    .tag:not(body).is-bug {\n        background-color: olivedrab;\n        color: white;\n    }\n\n    .tag:not(body).is-flying {\n        background-color: skyblue;\n        color: whitesmoke;\n    }\n\n    .tag:not(body).is-fighting {\n        background-color: darkkhaki;\n        color: white;\n    }\n\n    .tag:not(body).is-dragon {\n        background-color: pink;\n        color: white;\n    }\n\n    .type {\n        display: inline-block;\n    }\n</style>"]}]}